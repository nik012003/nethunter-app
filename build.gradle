buildscript {
    repositories {
        jcenter()
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.1' //version required
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
    maven {
        url "https://maven.google.com"
    }
    google()
}

dependencies {
    compile 'com.android.support:support-v4:26.1.0'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile project(':androidwversionmanager')
    compile 'org.thoughtcrime.ssl.pinning:AndroidPinning:1.0.0'
    compile 'com.google.android.gms:play-services-location:11.4.2'
    compile 'joda-time:joda-time:2.9.9'
    implementation 'com.google.guava:guava:23.2-android'
}

android {

    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 23
        versionName "2018.01.01"
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

    }

    signingConfigs {

        debug {
            storeFile file("${System.properties['user.home']}" + "/.android/debug.keystore")
        }

        /* note:  To build a signed version of nethunter:
        1. Put your keystore in ~/.android/release-keystore and set up a key "nethunter"
        2. set KEYSTORE_PASSWORD and KEY_PASSWORD environment variables before running gradle.  this
           can be done easily by adding them to .bashrc
        (or change the below values, hard-coding or whatever...)
        3. Don't forget to create a proguard.cfg file.  You can find a sample one in the sdk or
           point to it directly.

        release {
            storePassword System.getenv("KEYSTORE_PASSWORD")
            storeFile file("${System.properties['user.home']}" +  "/.android/release.keystore")
            keyAlias "nethunter"
            keyPassword System.getenv("KEY_PASSWORD")

        }
        */
    }

    buildTypes {

        debug {
            minifyEnabled false
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + System.currentTimeMillis() + "L)"
            buildConfigField "String", "BUILD_NAME", "\"" + System.getenv("USER") + "\""
            return true
        }
        release {
            //signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            debuggable false
            jniDebuggable false
            zipAlignEnabled true
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + System.currentTimeMillis() + "L)"
            /*  enable below to set "built by" name to build machine name
                buildConfigField "String", "BUILD_NAME", "\"" + System.getenv("USER") + "\""
                or change line below to hard code it.  */
            buildConfigField "String", "BUILD_NAME", "\"Kali\""
            return true
        }
    }
}
